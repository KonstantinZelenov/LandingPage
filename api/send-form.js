export default async function handler(request, response) {
  // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã —Å –ª—é–±–æ–≥–æ —Å–∞–π—Ç–∞ (CORS)
  response.setHeader('Access-Control-Allow-Origin', '*');
  response.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  response.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // –ï—Å–ª–∏ –±—Ä–∞—É–∑–µ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS (–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å)
  if (request.method === 'OPTIONS') {
    return response.status(200).end();
  }

  // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã
  if (request.method !== 'POST') {
    return response.status(405).json({ error: 'Only POST allowed' });
  }

  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
    const formData = await request.json();
    
    const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
üéØ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –õ–ï–ù–î–ò–ù–ì–ê!

üë§ –ò–º—è: ${formData.name}
üìß Email: ${formData.mail}
üó°Ô∏è –û—Ä—É–∂–∏–µ: ${formData.lesson_type}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message}

üèãÔ∏è‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: ${formData.trainingType}
‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${formData.duration}
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${formData.price}
üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${formData.description}

üïí –í—Ä–µ–º—è: ${new Date().toLocaleString()}
    `.trim();

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –¢–µ–ª–µ–≥—Ä–∞–º
    const telegramResponse = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML'
      })
    });

    const telegramData = await telegramResponse.json();

    if (telegramData.ok) {
      // –£—Å–ø–µ—Ö!
      response.status(200).json({ 
        success: true, 
        message: 'Form submitted successfully!' 
      });
    } else {
      // –û—à–∏–±–∫–∞ –¢–µ–ª–µ–≥—Ä–∞–º–∞
      console.error('Telegram error:', telegramData);
      response.status(500).json({ 
        error: 'Failed to send message to Telegram' 
      });
    }

  } catch (error) {
    // –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
    console.error('Server error:', error);
    response.status(500).json({ 
      error: 'Internal server error' 
    });
  }
}